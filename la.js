const axios = require('axios');
const config = require('./config.json');
const crypto = require('crypto');
const tags = require('common-tags');

module.exports = {
  callAuthentication: function (key, method) {
    //returns sig and epoch generated by epoch + method + key
    const epoch = (new Date).getTime();
    const salt = key.akid + method + epoch;
    const hash = crypto.createHmac('sha1', key.password);
    hash.update(salt);
    return {sig: encodeURIComponent(hash.digest('base64')), expires: epoch};
  },
  accessInfo: function (key, username, password) {
    const base = {
      baseURL: config.baseurl,
      timeout: 10000
    };
    const method = 'user_access_info';
    const callAuth = this.callAuthentication(key, method);
    return axios
      .get(
        tags.oneLineTrim`
        ${config.baseurl}${config.api}/users/${method}
        ?login_or_email=${username}&password=${password}
        &akid=${key.akid}&expires=${callAuth.expires}&sig=${callAuth.sig}
        `
        , base
      )
      .then((response) => {
        return Promise.resolve(response.data);
      })
      .catch((error) => {
        return Promise.reject(error.message)
      })
  }
};
